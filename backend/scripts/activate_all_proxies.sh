#!/bin/bash
# activate_all_proxies.sh - Start all proxy instances from the proxy log
# Updated for whitelabel HTTP proxy system

PROXY_LOG="/var/log/oceanproxy/proxies.json"
CONFIG_DIR="/etc/3proxy/plans"

echo "üöÄ Activating all proxy instances from proxy log..."

# Check if proxy log exists
if [ ! -f "$PROXY_LOG" ]; then
    echo "‚ùå Proxy log not found: $PROXY_LOG"
    echo "   Run './create_proxy_plan.sh' to create some plans first"
    exit 1
fi

# Check if log is empty
TOTAL_PLANS=$(jq length "$PROXY_LOG" 2>/dev/null || echo "0")
if [ "$TOTAL_PLANS" -eq 0 ]; then
    echo "‚ùå No plans found in proxy log"
    exit 1
fi

echo "üìã Found $TOTAL_PLANS plans in proxy log"

# Stop all existing 3proxy processes first
echo "üõë Stopping all existing 3proxy processes..."
sudo pkill -f 3proxy 2>/dev/null
sleep 2

STARTED_COUNT=0
FAILED_COUNT=0

# Process each plan in the log
while IFS= read -r entry; do
    plan_id=$(echo "$entry" | jq -r '.plan_id')
    username=$(echo "$entry" | jq -r '.username')
    password=$(echo "$entry" | jq -r '.password')
    auth_host=$(echo "$entry" | jq -r '.auth_host')
    auth_port=$(echo "$entry" | jq -r '.auth_port')
    subdomain=$(echo "$entry" | jq -r '.subdomain')
    local_port=$(echo "$entry" | jq -r '.local_port')
    status=$(echo "$entry" | jq -r '.status // "active"')
    
    # Skip inactive or malformed plans
    if [ "$status" != "active" ] || [ "$plan_id" = "null" ] || [ "$username" = "null" ]; then
        echo "   ‚è≠Ô∏è Skipping inactive/invalid plan: $plan_id"
        continue
    fi
    
    echo "üîÑ Starting plan: $plan_id ($username) on port $local_port"
    
    # Check if config file exists
    config_file="${CONFIG_DIR}/${plan_id}_${subdomain}.cfg"
    if [ ! -f "$config_file" ]; then
        echo "   ‚ùå Config file missing: $config_file"
        echo "   üîß Creating config file..."
        
        # Create the missing config file
        mkdir -p "$CONFIG_DIR"
        cat << EOF > "$config_file"
# 3proxy config for whitelabel HTTP proxy
# Plan ID: $plan_id
# User: $username
# Auto-generated by activate_all_proxies.sh

nscache 65536
timeouts 1 5 30 60 180 1800 15 60

# Authentication for this specific user
users $username:CL:$password
auth strong
allow $username

# Parent proxy (upstream provider)
parent 1000 http $auth_host $auth_port $username $password

# HTTP proxy listening on port $local_port
proxy -n -a -p$local_port -i0.0.0.0 -e0.0.0.0
EOF
    fi
    
    # Check if port is already in use
    if netstat -tlnp 2>/dev/null | grep -q ":$local_port "; then
        echo "   ‚ö†Ô∏è Port $local_port already in use, killing existing process..."
        EXISTING_PID=$(lsof -tiTCP:$local_port 2>/dev/null)
        if [ -n "$EXISTING_PID" ]; then
            kill -9 "$EXISTING_PID" 2>/dev/null
            sleep 1
        fi
    fi
    
    # Start 3proxy
    nohup /usr/bin/3proxy "$config_file" > "/var/log/3proxy_${plan_id}_${subdomain}.log" 2>&1 &
    PROXY_PID=$!
    
    # Verify it started
    sleep 1
    if kill -0 "$PROXY_PID" 2>/dev/null && netstat -tlnp 2>/dev/null | grep -q ":$local_port "; then
        echo "   ‚úÖ Started successfully (PID: $PROXY_PID)"
        ((STARTED_COUNT++))
    else
        echo "   ‚ùå Failed to start - check log: /var/log/3proxy_${plan_id}_${subdomain}.log"
        ((FAILED_COUNT++))
    fi
    
done < <(jq -c '.[]' "$PROXY_LOG")

echo ""
echo "üìä Activation Summary:"
echo "   ‚úÖ Successfully started: $STARTED_COUNT"
echo "   ‚ùå Failed to start: $FAILED_COUNT"
echo "   üìã Total plans processed: $TOTAL_PLANS"

# Show current system status
echo ""
echo "üîç Current System Status:"
active_processes=$(ps aux | grep 3proxy | grep -v grep | wc -l)
echo "   Active 3proxy processes: $active_processes"

# Check nginx status
if systemctl is-active nginx >/dev/null 2>&1; then
    echo "   Nginx status: ‚úÖ Running"
else
    echo "   Nginx status: ‚ùå Not running"
    echo "   üí° Run: systemctl start nginx"
fi

echo ""
if [ $FAILED_COUNT -eq 0 ]; then
    echo "üéâ All proxy instances activated successfully!"
    echo "üåê Your whitelabel proxy service is ready for clients!"
else
    echo "‚ö†Ô∏è Some proxy instances failed to start - check individual logs"
fi
